<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:annotation> 
    <xs:documentation>
      The MIT License

      Copyright (c) 2008 the RDML-consortium

      Permission is hereby granted, free of charge, to any person obtaining a copy
      of this software and associated documentation files (the "Software"), to deal
      in the Software without restriction, including without limitation the rights
      to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
      copies of the Software, and to permit persons to whom the Software is
      furnished to do so, subject to the following conditions:

      The above copyright notice and this permission notice shall be included in
      all copies or substantial portions of the Software.

      THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
      IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
      FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
      AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
      LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
      OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
      THE SOFTWARE.
    </xs:documentation> 
  </xs:annotation>

  <xs:complexType name="cdna_synthesis_method_type">
    <xs:sequence>
      <xs:element name="enzyme" type="xs:string"/>
      <xs:element name="priming_method" type="priming_method_type"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="commercial_assay_type">
    <xs:sequence>
      <xs:element name="company" type="xs:string"/>
      <xs:element name="order_number" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>

  <xs:simpleType name="cq_detection_method_type">
    <xs:restriction base="xs:string">
      <xs:enumeration value="automated threshold and baseline settings"/>
      <xs:enumeration value="manual threshold and baseline settings"/>
      <xs:enumeration value="second derivative maximum"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="data_collection_software_type">
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="0"/>
      <xs:element name="version" type="xs:string" minOccurs="0"/>
      <xs:element name="background_determination_method" type="xs:string" minOccurs="0"/>
      <xs:element name="cq_detection_method" type="cq_detection_method_type" minOccurs="0"/>
      <xs:element name="pcr_program" type="pcr_program_type" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="data_set_type">
    <xs:sequence>
      <xs:element name="dp" type="dp_type" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:simpleType name="dnase_treatment_type">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Y"/>
      <xs:enumeration value="N"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="dp_type">
    <xs:annotation> 
      <xs:documentation>Due to the high amount of this nodes names are kept short
      </xs:documentation> 
    </xs:annotation> 
    <xs:sequence>
      <xs:choice>
        <xs:element name="tmp" type="xs:float" />
        <xs:element name="cyc" type="xs:float" />
      </xs:choice>
      <xs:element name="fluor" type="xs:float"/>
    </xs:sequence>
  </xs:complexType>  

  <xs:complexType name="dye_type">
    <xs:annotation> 
      <xs:documentation>Due to the high amount of this nodes names are kept short
      </xs:documentation> 
    </xs:annotation> 
    <xs:sequence>
      <xs:element name="id" type="xs:string" minOccurs="0"/>
      <xs:element name="tar_id" type="xs:string"/>
      <xs:element name="cq" type="xs:float" minOccurs="0"/>
      <xs:element name="quantity" type="xs:float" minOccurs="0"/>
      <xs:element name="excl" type="xs:boolean" default="false" minOccurs="0"/>
      <xs:element name="excl_exp" type="xs:string" minOccurs="0"/>
      <xs:element name="amp_eff" type="xs:float" minOccurs="0"/>
      <xs:element name="amp_fluor" type="data_set_type" minOccurs="0"/>
      <xs:element name="melt_fluor" type="data_set_type" minOccurs="0"/>
      <xs:element name="bg_fluor" type="xs:float" minOccurs="0"/>
      <xs:element name="quant_fluor" type="xs:float" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="experiment_annotation_type">
    <xs:sequence>
      <xs:element name="experiment_name" type="xs:string" minOccurs="0"/>
      <xs:element name="annotation" type="xs:string" minOccurs="0"/>
      <xs:element name="target_annotation" type="target_annotation_type" minOccurs="0"/>
      <xs:element name="sample_annotation" type="sample_annotation_type" minOccurs="0"/>
      <xs:element name="researcher" type="researcher_type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="experiment_type">
    <xs:sequence>
      <xs:element name="id" type="xs:string"/>
      <xs:element name="date_made" type="xs:dateTime"/>
      <xs:element name="date_updated" type="xs:dateTime"/>
      <xs:element name="annotation" type="experiment_annotation_type" minOccurs="0"/>
      <xs:element name="run" minOccurs="0" maxOccurs="unbounded" type="run_type"/>
    </xs:sequence>
  </xs:complexType>
  
  <xs:complexType name="oligo_type">
    <xs:sequence>
	  <xs:element name="three_prime_tag" type="xs:string" minOccurs="0"/>
	  <xs:element name="five_prime_tag" type="xs:string" minOccurs="0"/>
	  <xs:element name="sequence" type="sequence_type" minOccurs="0"/>
	</xs:sequence>
  </xs:complexType>

  <xs:complexType name="organism_type">
    <xs:sequence>
      <xs:element name="free_description" type="xs:string" minOccurs="0"/>
      <xs:element name="official_description" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:simpleType name="pcr_format_type">
    <xs:restriction base="xs:string">
      <xs:enumeration value="single-well"/>
      <xs:enumeration value="48-well plate"/>
      <xs:enumeration value="96-well plate"/>
      <xs:enumeration value="384-well plate"/>
      <xs:enumeration value="32-well rotor"/>
      <xs:enumeration value="72-well rotor"/>
      <xs:enumeration value="100-well rotor"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="pcr_program_type">
    <xs:sequence>
      <xs:element name="pcr_program_id" type="xs:string"/>
      <xs:element name="lid_temperature" type="xs:float" minOccurs="0"/>
      <xs:element name="step" type="step_type" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:simpleType name="priming_method_type">
    <xs:restriction base="xs:string">
      <xs:enumeration value="oligo-dt"/>
      <xs:enumeration value="random"/>
      <xs:enumeration value="target-specific"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="researcher_type">
    <xs:sequence>
      <xs:element name="id" type="xs:string"/>
      <xs:element name="researcher_name" type="xs:string"/>
      <xs:element name="lab_name" type="xs:string" minOccurs="0"/>
      <xs:element name="e-mail" type="xs:string" minOccurs="0"/>
      <xs:element name="lab_address" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="run_annotation_type">
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="0"/>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
      <xs:element name="instrument" type="xs:string" minOccurs="0"/>
      <xs:element name="pcr_format" type="pcr_format_type" minOccurs="0"/>
      <xs:element name="data_collection_software" type="data_collection_software_type" minOccurs="0"/>
      <xs:element name="run_date" type="xs:dateTime" minOccurs="0"/>
      <xs:element name="researcher" type="researcher_type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType> 

  <xs:complexType name="run_data_type">
    <xs:sequence>
      <xs:element name="well" type="well_type" maxOccurs="unbounded" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="run_type">
    <xs:sequence>
      <xs:element name="id" type="xs:string"/>
      <xs:element name="date_made" type="xs:dateTime"/>
      <xs:element name="date_updated" type="xs:dateTime"/>
      <xs:element name="annotation" type="run_annotation_type" minOccurs="0"/>
      <xs:element name="data" type="run_data_type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="sample_annotation_type">
    <xs:sequence>
      <xs:element name="sample" type="sample_type" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="sample_type">
    <xs:sequence>
      <xs:element name="id" type="xs:string"/>
      <xs:element name="type" type="sample_type_type" default="unkn"/>
      <xs:element name="inter_run_calibrator" type="xs:boolean" default="false" minOccurs="0"/>
      <xs:element name="calibrator_sample" type="xs:boolean" default="false" minOccurs="0"/>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
      <xs:element name="template_isolation_method" type="xs:string" minOccurs="0"/>
      <xs:element name="dnase_treatment" type="dnase_treatment_type" minOccurs="0"/>
      <xs:element name="cdna_synthesis_method" type="cdna_synthesis_method_type" minOccurs="0"/>
      <xs:element name="template_quantity" type="xs:double" minOccurs="0"/>
      <xs:element name="template_quality" type="template_quality_type" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  
  <xs:simpleType name="sample_type_type">
    <xs:restriction base="xs:string">
      <xs:enumeration value="unkn"/>
      <xs:enumeration value="ntc"/>
      <xs:enumeration value="nac"/>
      <xs:enumeration value="std"/>
      <xs:enumeration value="opt"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="sequence_type">
    <xs:restriction base="xs:string">
      <xs:pattern value="([a-zA-Z]+)"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="sequences_type">
    <xs:sequence>
      <xs:element name="forward_primer" type="oligo_type"/>
      <xs:element name="reverse_primer" type="oligo_type"/>
      <xs:element name="probe1" type="oligo_type" minOccurs="0"/>
      <xs:element name="probe2" type="oligo_type" minOccurs="0"/>
      <xs:element name="amplicon" type="oligo_type"/>  
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="step_gradient_type">
    <xs:sequence>
      <xs:element name="high_temperature" type="xs:float"/>
      <xs:element name="low_temperature" type="xs:float"/>
      <xs:element name="duration" type="xs:positiveInteger"/>
      <xs:element name="temperature_change" type="xs:float" minOccurs="0"/>
      <xs:element name="duration_change" type="xs:int" minOccurs="0"/>
      <xs:element name="measure" type="step_measure_type" minOccurs="0"/>
      <xs:element name="ramp" type="xs:float" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="step_lid_open_type"/>

  <xs:complexType name="step_loop_type">
    <xs:sequence>
      <xs:element name="goto_step" type="xs:positiveInteger"/>
      <xs:element name="repeat_loop" type="xs:positiveInteger"/>
    </xs:sequence>
  </xs:complexType>

  <xs:simpleType name="step_measure_type">
    <xs:restriction base="xs:string">
      <xs:enumeration value="none"/>
      <xs:enumeration value="real time"/>
      <xs:enumeration value="meltcurve"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="step_temperature_type">
    <xs:sequence>
      <xs:element name="temperature" type="xs:float"/>
      <xs:element name="duration" type="xs:positiveInteger"/>
      <xs:element name="temperature_change" type="xs:float" minOccurs="0"/>
      <xs:element name="duration_change" type="xs:int" minOccurs="0"/>
      <xs:element name="measure" type="step_measure_type" minOccurs="0"/>
      <xs:element name="ramp" type="xs:float" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="step_type">
    <xs:sequence>
      <xs:element name="step_nr" type="xs:positiveInteger"/>
      <xs:element name="step_description" type="xs:string" minOccurs="0"/>
      <xs:choice>
        <xs:element name="step_temperature" type="step_temperature_type"/>
        <xs:element name="step_gradient" type="step_gradient_type"/>
        <xs:element name="step_loop" type="step_loop_type"/>
        <xs:element name="step_lid_open" type="step_lid_open_type"/>
        <xs:element name="step_pause" type="step_pause_type"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="step_pause_type">
    <xs:sequence>
      <xs:element name="temperature" type="xs:float"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="target_annotation_type">
    <xs:sequence>
      <xs:element name="target" type="target_type" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="target_type">
    <xs:sequence> 
      <xs:element name="id" type="xs:string"/>
      <xs:element name="type" type="target_type_type"/>
      <xs:element name="organism" type="organism_type" minOccurs="0"/>
      <xs:element name="x_ref" type="x_ref_type" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="official_gene_symbol" type="xs:string" minOccurs="0"/>
      <xs:element name="entrez_gene_id" type="xs:string" minOccurs="0"/>
      <xs:element name="target_amplification_efficiency" type="xs:float" minOccurs="0"/>
      <xs:element name="sequences" type="sequences_type" minOccurs="0"/>
      <xs:element name="commercial_assay" type="commercial_assay_type" minOccurs="0"/>
      <xs:element name="rt_primer_db_id" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:simpleType name="target_type_type">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ref"/>
      <xs:enumeration value="toi"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="template_quality_type">
    <xs:sequence>
      <xs:element name="method" type="xs:string"/>
      <xs:element name="result" type="xs:float"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="third_party_extensions_type">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="well_type">
    <xs:sequence>
      <xs:element name="id" type="xs:string"/>
      <xs:element name="sample_id" type="xs:string"/>
      <xs:element name="dye" type="dye_type" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="x_ref_type">
    <xs:sequence>
      <xs:element name="x_ref_name" type="xs:string" minOccurs="0"/>
      <xs:element name="x_ref_id" type="xs:string" minOccurs="0"/>	  
    </xs:sequence>
  </xs:complexType>

  <xs:element name="rdml">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="version" type="xs:string"/>
        <xs:element name="experiment" type="experiment_type" maxOccurs="unbounded"/>
        <xs:element name="third_party_extensions" type="third_party_extensions_type" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>


</xs:schema>  